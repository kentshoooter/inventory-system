using System;
using System.Windows.Forms;

namespace InventoryManagementSystem
{
    public partial class SignUp : Form
    {
        public SignUp()
        {
            InitializeComponent();
        }

        private void close_Click(object sender, EventArgs e)
        {
            Application.Exit();
        }

        private void btnSignUp_Click(object sender, EventArgs e)
        {
            string username = txtUsername.Text;
            string password = txtPassword.Text;

            if (string.IsNullOrWhiteSpace(username) || string.IsNullOrWhiteSpace(password))
            {
                MessageBox.Show("Username and password are required.", "Error Message", MessageBoxButtons.OK, MessageBoxIcon.Error);
                return;
            }

            try
            {
                // Replace this with your own sign up logic
                UserManager.SaveUser(username, password);

                MessageBox.Show("Sign up successful!", "Information Message", MessageBoxButtons.OK, MessageBoxIcon.Information);

                SignIn signInForm = new SignIn();
                signInForm.Show();
                this.Hide();
            }
            catch (Exception ex)
            {
                MessageBox.Show("Sign up failed: " + ex.Message, "Error Message", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

        private void btnCancel_Click(object sender, EventArgs e)
        {
            this.Close();
        }
    }
}

using System;
using System.Security.Cryptography;
using System.Text;

namespace InventoryManagementSystem
{
    public static class UserManager
    {
        private const string PasswordSalt = "mysecretkey";

        public static void SaveUser(string username, string password)
        {
            string encryptedPassword = GetEncryptedPassword(password);

            // Here you can add code to save the username and encrypted password
            // to a secure storage location (such as a database or encrypted file)
        }

        public static bool AuthenticateUser(string username, string password)
        {
            string savedUsername = "user";
            string savedPassword = GetEncryptedPassword("password");

            return username == savedUsername && password == savedPassword;
        }

        private static string GetEncryptedPassword(string password)
        {
            using (SHA256 sha256 = SHA256.Create())
            {
                byte[] saltBytes = Encoding.UTF8.GetBytes(PasswordSalt);
                byte[] passwordBytes = Encoding.UTF8.GetBytes(password);

                byte[] saltedPasswordBytes = new byte[saltBytes.Length + passwordBytes.Length];
                Array.Copy(saltBytes, saltedPasswordBytes, saltBytes.Length);
                Array.Copy(passwordBytes, 0, saltedPasswordBytes, saltBytes.Length, passwordBytes.Length);

                byte[] encryptedPasswordBytes = sha2
